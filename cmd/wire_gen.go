// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"context"
	"github.com/EZChain-core/price-service/config"
	redis2 "github.com/EZChain-core/price-service/pkg/admin/repository/redis"
	usecase2 "github.com/EZChain-core/price-service/pkg/admin/usecase"
	"github.com/EZChain-core/price-service/pkg/service/repository/redis"
	"github.com/EZChain-core/price-service/pkg/service/usecase"
)

// Injectors from wire.go:

func initServiceUseCase(ctx context.Context) *usecase.ServiceUseCase {
	appConfig := ProvideConfig()
	serviceRedisStorage := redis.NewServiceRedisStorage(ctx, appConfig)
	serviceUseCase := usecase.NewServiceUseCase(serviceRedisStorage)
	return serviceUseCase
}

func initAdminUseCase(ctx context.Context) *usecase2.AdminUseCase {
	appConfig := ProvideConfig()
	adminRedisStorage := redis2.NewAdminRedisStorage(ctx, appConfig)
	adminUseCase := usecase2.NewAdminUseCase(adminRedisStorage)
	return adminUseCase
}

// wire.go:

// Init new config
func ProvideConfig() *config.AppConfig {
	return config.InitConfig()
}
